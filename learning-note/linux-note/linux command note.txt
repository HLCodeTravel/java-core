Linux Command note
@date 2018-8-1 10:50:17


目录
第1部分 常用命令
第2部分 vim命令


-------------------------------------------------------
第1部分 常用命令

- date
- df
- grep
- ps



-----------------------------
- grep

    grep "find content" dist_file
        查找包含有指定字符串的行


- scp
    scp src_file admin@192.168.1.1:/home/admin/lib


- date


- ps


-------------------------------------------------------
第2部分 vim 命令




-------------------------------------------------------
第3部分 常用功能

- 快速清空一个文件
    echo "" > test.txt（文件大小被截为1字节）
    > test.txt（文件大小被截为0字节）
    cat/dev/null > test.txt（文件大小被截为0字节）


- 查看磁盘
    查看各文件夹大小
        du -h --max-depth=1

    查看设备的空间使用率
        df -lh

    du 统计文件大小相加
    df  统计数据块使用情况
    du -sh filename（其实我们经常用du -sh *，显示当前目录下所有的文件及其大小，如果要排序再在后面加上 | sort -n）
    du -sm * | sort -n //统计当前目录大小 并按大小 排序


- CPU占用最多的前10个进程
    ps auxw|head -1;
    ps auxw|sort -rn -k3|head -10


- 内存消耗最多的前10个进程
    ps auxw|head -1;
    ps auxw|sort -rn -k4|head -10


- 查看日期
    date
    date "+%Y%m%d %H:%M:%S"
    date "+%s"，新纪元秒数


- 配置环境变量
  export LD_LIBRARY_PATH=/usr/local/lib:/lib:/usr/lib/:$LD_LIBRARY_PATH


- 递归创建多层目录
	mkdir -p test1/test2


- Linux改变文件和目录权限-chmod&chown
  chmod
  	改变一个文件的权限：chmod [mode] file.txt
  	改变一个目录的权限：chmod [mode] dir
  	改变一个目录和其子目录的权限：chmod [mode] dir -R

  mode = 777 or 752 and so on.
  mode的三个数字，分别表示owner,group,others所具备的权限。
      1＝x 执行
      2＝w 写
      4＝r 读
  比如owner具有所有权限，1+2+4=7,又比如 group 具有读和执行权限1+4=5。

  chown
  	更改文件或目录的拥有者
  	-R参数表示递归改变
  	chown [-R] 账户名称 文件或目录
  	chown [-R] 账户名称:用户组名称 文件或目录


-在 Linux、Mac OS X 上搭建环境，安装LuaJIT
    wget http://luajit.org/download/LuaJIT-2.1.0-beta1.tar.gz
    tar -xvf LuaJIT-2.1.0-beta1.tar.gz
    cd LuaJIT-2.1.0-beta1
    make
    sudo make install


- GET 和 POST 请求
    curl http://192.168.18.208
    curl -d "clientId=10575&version=2" "http://192.168.18.208:8888/put"


- 查看文件行数
    1、vim  fileName
    2、set nu
    3、G
    文件的行数你就可以看到了。

    备注：
        vim + fileName 是打开一个文件
        set nu 是显示行号
        G跳转到文件的尾部
        然后行的前面的行号就显示出来了。


- 统计行数
    语法：wc [选项] 文件
    说明：该命令统计给定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所有指定文件的总统计数。字是由空格字符区分开的最大字符串。
    该命令各选项含义如下：
    　　- c 统计字节数。
    　　- l 统计行数。
    　　- w 统计字数。



-------------------------------------------------------
第4部分 shell基础

- for循环
    for i in {1..5}
    do
      echo $i
    done


    #!/bin/bash
    sum=0
    for i in {1..100..2}
    do
        let "sum+=i"
    done
    echo "sum=$sum"


    #!/bin/bash
    for file in $( ls )
    # for file in ./*
    do
       echo "file: $file"
    done



shell判断文件是否存在
	if [ ! -f $origin_log ]; then
	    exit 0
	fi



- 按照文件名查找文件
    find /dir -name filename  在/dir目录及其子目录下面查找名字为filename的文件
    find . -name "*.c" 在当前目录及其子目录（用“.”表示）中查找任何扩展名为“c”的文件
    find . -maxdepth 1 -name "*.zip" -exec basename {} \;



- 查找 当前目录下包含alias字符串的*.conf的文件
    find . -name "*.conf" | xargs grep -H "alias"
    find . -name "*.conf" -exec grep -H "alias" {} /;
    find . -maxdepth 1 -type f -name "*.sh" | wc -l


- 测试命令
 test命令用于检查某个条件是否成立，它可以进行数值、字符和文件3个方面的测试，其测试符和相应的功能分别如下。
（1）数值测试：
　　-eq 等于则为真。
　　-ne 不等于则为真。
　　-gt 大于则为真。
　　-ge 大于等于则为真。
　　-lt 小于则为真。
　　-le 小于等于则为真。

（2）字串测试：
　　= 等于则为真。
　　!= 不相等则为真。
　　-z字串 字串长度伪则为真。
　　-n字串 字串长度不伪则为真。

（3）文件测试：
　　-e文件名 如果文件存在则为真。
　　-r文件名 如果文件存在且可读则为真。
　　-w文件名 如果文件存在且可写则为真。
　　-x文件名 如果文件存在且可执行则为真。
　　-s文件名 如果文件存在且至少有一个字符则为真。
　　-d文件名 如果文件存在且为目录则为真。
　　-f文件名 如果文件存在且为普通文件则为真。
　　-c文件名 如果文件存在且为字符型特殊文件则为真。
　　-b文件名 如果文件存在且为块特殊文件则为真


