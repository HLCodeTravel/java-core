


-------------------------------------------------------
第4部分 shell基础

- for循环
    for i in {1..5}
    do
      echo $i
    done


    #!/bin/bash
    sum=0
    for i in {1..100..2}
    do
        let "sum+=i"
    done
    echo "sum=$sum"


    #!/bin/bash
    for file in $( ls )
    # for file in ./*
    do
       echo "file: $file"
    done


    while循环
        #!/bin/sh
        int=1
        while(( $int<=5 ))
        do
            echo $int
            let "int++"
        done


shell判断文件是否存在
	if [ ! -f $origin_log ]; then
	    exit 0
	fi


- 按照文件名查找文件
    find /dir -name filename  在/dir目录及其子目录下面查找名字为filename的文件
    find . -name "*.c" 在当前目录及其子目录（用“.”表示）中查找任何扩展名为“c”的文件
    find . -maxdepth 1 -name "*.zip" -exec basename {} \;


- 查找 当前目录下包含alias字符串的*.conf的文件
    find . -name "*.conf" | xargs grep -H "alias"
    find . -name "*.conf" -exec grep -H "alias" {} /;
    find . -maxdepth 1 -type f -name "*.sh" | wc -l


- 测试命令
 test命令用于检查某个条件是否成立，它可以进行数值、字符和文件3个方面的测试，其测试符和相应的功能分别如下。
（1）数值测试：
　　-eq 等于则为真。
　　-ne 不等于则为真。
　　-gt 大于则为真。
　　-ge 大于等于则为真。
　　-lt 小于则为真。
　　-le 小于等于则为真。

（2）字串测试：
　　= 等于则为真。
　　!= 不相等则为真。
　　-z字串 字串长度伪则为真。
　　-n字串 字串长度不伪则为真。

（3）文件测试：
　　-e文件名 如果文件存在则为真。
　　-r文件名 如果文件存在且可读则为真。
　　-w文件名 如果文件存在且可写则为真。
　　-x文件名 如果文件存在且可执行则为真。
　　-s文件名 如果文件存在且至少有一个字符则为真。
　　-d文件名 如果文件存在且为目录则为真。
　　-f文件名 如果文件存在且为普通文件则为真。
　　-c文件名 如果文件存在且为字符型特殊文件则为真。
　　-b文件名 如果文件存在且为块特殊文件则为真


- sleep
    sleep睡眠指令
    sleep 0.01 睡眠10ms
    sleep 1    睡眠1秒
    sleep 1s   睡眠1秒
    sleep 1m   睡眠1分
    sleep 1h   睡眠1小时


- 子字符串
    指定从左边第几个字符开始以及子串中字符的个数
    语法：
    ${var:start:len}

    示例代码：
    str="http://www.fengbohello.xin3e.com/blog/shell-truncating-string"
    echo "string : [${str}]"

    #其中的 0 表示左边第一个字符开始，7 表示子字符的总个数。
    substr=${str:0:7}
    echo "substr : [${substr}]"

    执行结果：
    string : [http://www.fengbohello.xin3e.com/blog/shell-truncating-string]
    substr : [http://]


    从右边第几个字符开始以及字符的个数
    语法：
    ${var:0-start:len}

    示例代码：
    str="http://www.fengbohello.xin3e.com/blog/shell-truncating-string"
    echo "string : [${str}]"

    #其中的 0-23 表示右边算起第23个字符开始，5 表示字符的个数
    substr=${str:0-23:5}
    echo "substr : [${substr}]"


